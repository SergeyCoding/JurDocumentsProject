{
  "openapi": "3.0.1",
  "info": {
    "title": "JurDocs.Server",
    "version": "1.0"
  },
  "paths": {
    "/api/Date": {
      "get": {
        "tags": [ "Date" ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/Date/Delay": {
      "get": {
        "tags": [ "Date" ],
        "parameters": [
          {
            "name": "delay",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "/api/DocumentFile": {
      "get": {
        "tags": [ "DocumentFile" ],
        "summary": "Получение файла",
        "description": "Получение файла",
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "Проект",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "docType",
            "in": "query",
            "description": "Документ",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Имя файла",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "type": "boolean" } },
              "application/json": { "schema": { "type": "boolean" } },
              "text/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": [ "DocumentFile" ],
        "summary": "Получение файла",
        "description": "Получение файла",
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "Проект",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "docType",
            "in": "query",
            "description": "Документ",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Имя файла",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "type": "boolean" } },
              "application/json": { "schema": { "type": "boolean" } },
              "text/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "delete": {
        "tags": [ "DocumentFile" ],
        "summary": "Удаление файл во временном каталоге",
        "description": "Удаление файл во временном каталоге",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "Имя файла",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "type": "boolean" } },
              "application/json": { "schema": { "type": "boolean" } },
              "text/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/api/DocumentList": {
      "get": {
        "tags": [ "DocumentList" ],
        "summary": "Получение всех файлов, доступных пользователю",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [ "DocumentList" ],
        "summary": "Получение всех файлов вида docName, доступных пользователю",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/DocumentListRequest" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/DocumentListRequest" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/DocumentListRequest" } }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DocumentListResponse" }
                }
              }
            }
          }
        }
      }
    },
    "/api/LetterDocument": {
      "get": {
        "tags": [ "LetterDocument" ],
        "summary": "Получить список писем",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } }
            }
          }
        }
      },
      "post": {
        "tags": [ "LetterDocument" ],
        "summary": "Создать письмо",
        "description": "Создать письмо",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } }
            }
          }
        }
      },
      "put": {
        "tags": [ "LetterDocument" ],
        "summary": "Изменить письмо",
        "description": "Изменить письмо",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocument" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocument" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/LetterDocument" } }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentDataResponse" } }
            }
          }
        }
      },
      "delete": {
        "tags": [ "LetterDocument" ],
        "summary": "Удалить письмо",
        "description": "Удалить письмо",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/api/LetterDocument/{projectId}": {
      "get": {
        "tags": [ "LetterDocument" ],
        "summary": "Получить письма по Id проекта",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LetterDocumentArrayDataResponse" } }
            }
          }
        }
      }
    },
    "/api/Login": {
      "get": {
        "tags": [ "Login" ],
        "summary": "Сведения о пользователе",
        "description": "Сведения о пользователе",
        "parameters": [
          {
            "name": "Login",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LoginGetResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LoginGetResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LoginGetResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": [ "Login" ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginPostRequest" } } } },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/LoginErrorResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/LoginErrorResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/LoginErrorResponse" } }
            }
          }
        }
      },
      "delete": {
        "tags": [ "Login" ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/api/Person": {
      "get": {
        "tags": [ "Person" ],
        "summary": "Сотрудники",
        "description": "Сотрудники",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PersonGetResponse" }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PersonGetResponse" }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PersonGetResponse" }
                }
              }
            }
          }
        }
      }
    },
    "/api/Project": {
      "get": {
        "tags": [ "Project" ],
        "summary": "Получить список проектов",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/JurDocProject" }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/JurDocProject" }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/JurDocProject" }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      },
      "post": {
        "tags": [ "Project" ],
        "summary": "Создать пустой проект",
        "description": "Создать пустой проект",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/JurDocProject" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProject" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProject" } }
            }
          },
          "400": { "description": "Bad Request" }
        }
      },
      "put": {
        "tags": [ "Project" ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProject" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProject" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/JurDocProject" } }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } }
            }
          }
        }
      },
      "delete": {
        "tags": [ "Project" ],
        "summary": "Удалить проект",
        "description": "Удалить проект",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/api/Project/{projectId}": {
      "get": {
        "tags": [ "Project" ],
        "summary": "Получить проект по Id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/JurDocProjectDataResponse" } }
            }
          }
        }
      }
    },
    "/api/Rights": {
      "get": {
        "tags": [ "Rights" ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectRights" }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectRights" }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectRights" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [ "Rights" ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RightsPostRequest" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/RightsPostRequest" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/RightsPostRequest" } }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/StringDataResponse" } }
            }
          }
        }
      },
      "delete": {
        "tags": [ "Rights" ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ProjectRights" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/ProjectRights" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/ProjectRights" } }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "string" } },
              "text/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/api/UserDir": {
      "post": {
        "tags": [ "Директория пользователей" ],
        "summary": "Очистить каталог пользователя",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": { "schema": { "$ref": "#/components/schemas/ClearTempResponse" } },
              "application/json": { "schema": { "$ref": "#/components/schemas/ClearTempResponse" } },
              "text/json": { "schema": { "$ref": "#/components/schemas/ClearTempResponse" } }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [ "*Пользователи" ],
        "summary": "Вывести пользователей",
        "description": "Вывести пользователей",
        "responses": { "200": { "description": "Success" } }
      },
      "post": {
        "tags": [ "*Пользователи" ],
        "summary": "Добавить пользователей",
        "description": "Добавить пользователей",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/JurDocUser" }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/JurDocUser" }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/JurDocUser" }
              }
            }
          }
        },
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": [ "*Пользователи" ],
        "summary": "Удалить пользователя",
        "description": "Удалить пользователя",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/JurDocUser" } },
            "text/json": { "schema": { "$ref": "#/components/schemas/JurDocUser" } },
            "application/*+json": { "schema": { "$ref": "#/components/schemas/JurDocUser" } }
          }
        },
        "responses": { "200": { "description": "Success" } }
      }
    }
  },
  "components": {
    "schemas": {
      "ClearTempResponse": {
        "type": "object",
        "properties": { "result": { "type": "boolean" } },
        "additionalProperties": false
      },
      "DocumentListRequest": {
        "type": "object",
        "properties": {
          "docName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DocumentListResponse": {
        "type": "object",
        "properties": {
          "docName": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JurDocProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": { "type": "boolean" }
        },
        "additionalProperties": false
      },
      "JurDocProjectDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/JurDocProject" },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "messageToUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JurDocType": {
        "enum": [ 0, 1, 2, 3, 4, 5 ],
        "type": "integer",
        "format": "int32"
      },
      "JurDocUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LetterDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "docType": { "$ref": "#/components/schemas/JurDocType" },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dateOutgoing": {
            "type": "string",
            "format": "date-time"
          },
          "dateIncoming": {
            "type": "string",
            "format": "date-time"
          },
          "numberOutgoing": {
            "type": "string",
            "nullable": true
          },
          "numberIncoming": {
            "type": "string",
            "nullable": true
          },
          "executivePerson": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": { "type": "boolean" },
          "sender": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "recipient": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LetterDocumentArrayDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/LetterDocument" }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "messageToUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LetterDocumentDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LetterDocument" },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "messageToUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "descr": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginGetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginPostRequest": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonGetResponse": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "format": "int32"
          },
          "personName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectRights": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "docType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RightsPostRequest": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "docType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StringDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "messageToUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n                      Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [ { "Bearer": [] } ]
}
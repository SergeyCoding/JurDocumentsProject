// <auto-generated />
using System;
using JurDocs.DbModel.MigrationsContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JurDocs.DbModel.Migrations
{
    [DbContext(typeof(JurDocsMigrationDbContext))]
    [Migration("20240503064758_Table_JurDocLetter_Add_ProjectId")]
    partial class Table_JurDocLetter_Add_ProjectId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("JurDocs.DbModel.JurDocLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateIncoming")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOutgoing")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExecutivePerson")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberIncoming")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberOutgoing")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("JurDocLetter");
                });

            modelBuilder.Entity("JurDocs.DbModel.JurDocLetterAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttributeType")
                        .HasColumnType("TEXT");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("JurDocLetterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JurDocLetterId");

                    b.ToTable("JurDocLetterAttributes");
                });

            modelBuilder.Entity("JurDocs.DbModel.JurDocProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("JurDocProject");
                });

            modelBuilder.Entity("JurDocs.DbModel.JurDocUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JurDocUser");
                });

            modelBuilder.Entity("JurDocs.DbModel.ProjectRights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocType")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProjectRights");
                });

            modelBuilder.Entity("JurDocs.DbModel.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("JurDocs.DbModel.JurDocLetterAttributes", b =>
                {
                    b.HasOne("JurDocs.DbModel.JurDocLetter", "Letter")
                        .WithMany("Attributes")
                        .HasForeignKey("JurDocLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Letter");
                });

            modelBuilder.Entity("JurDocs.DbModel.JurDocLetter", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
